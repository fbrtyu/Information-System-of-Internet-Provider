{"ast":null,"code":"import _classCallCheck from \"C:/Users/admin/Desktop/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/123123/GW/Information-System-of-Internet-Provider/SiteReact/gg/app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/admin/Desktop/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/123123/GW/Information-System-of-Internet-Provider/SiteReact/gg/app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-6b3bd404.js';\nimport { objectIncludes, DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport '../masked/date.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../masked/pattern.js';\nimport '../masked/base.js';\nimport '../core/continuous-tail-details.js';\nimport '../masked/pattern/input-definition.js';\nimport '../masked/pattern/fixed-definition.js';\nimport '../masked/pattern/chunk-tail-details.js';\nimport '../masked/pattern/cursor.js';\nimport '../masked/regexp.js';\nimport '../masked/range.js';\nvar _excluded = [\"mask\"];\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nvar InputMask = /*#__PURE__*/function () {\n  /**\n    View element\n    @readonly\n  */\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  function InputMask(el, opts) {\n    _classCallCheck(this, InputMask);\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  _createClass(InputMask, [{\n    key: \"mask\",\n    get: function get() {\n      return this.masked.mask;\n    },\n    set: function set(mask) {\n      if (this.maskEquals(mask)) return;\n\n      // $FlowFixMe No ideas ... after update\n      if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n        this.masked.updateOptions({\n          mask: mask\n        });\n        return;\n      }\n      var masked = createMask({\n        mask: mask\n      });\n      masked.unmaskedValue = this.masked.unmaskedValue;\n      this.masked = masked;\n    }\n\n    /** Raw value */\n  }, {\n    key: \"maskEquals\",\n    value: function maskEquals(mask) {\n      var _this$masked;\n      return mask == null || ((_this$masked = this.masked) === null || _this$masked === void 0 ? void 0 : _this$masked.maskEquals(mask));\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(str) {\n      if (this.value === str) return;\n      this.masked.value = str;\n      this.updateControl();\n      this.alignCursor();\n    }\n\n    /** Unmasked value */\n  }, {\n    key: \"unmaskedValue\",\n    get: function get() {\n      return this._unmaskedValue;\n    },\n    set: function set(str) {\n      if (this.unmaskedValue === str) return;\n      this.masked.unmaskedValue = str;\n      this.updateControl();\n      this.alignCursor();\n    }\n\n    /** Typed unmasked value */\n  }, {\n    key: \"typedValue\",\n    get: function get() {\n      return this.masked.typedValue;\n    },\n    set: function set(val) {\n      if (this.masked.typedValueEquals(val)) return;\n      this.masked.typedValue = val;\n      this.updateControl();\n      this.alignCursor();\n    }\n\n    /** Display value */\n  }, {\n    key: \"displayValue\",\n    get: function get() {\n      return this.masked.displayValue;\n    }\n\n    /**\n      Starts listening to element events\n      @protected\n    */\n  }, {\n    key: \"_bindEvents\",\n    value: function _bindEvents() {\n      this.el.bindEvents({\n        selectionChange: this._saveSelection,\n        input: this._onInput,\n        drop: this._onDrop,\n        click: this._onClick,\n        focus: this._onFocus,\n        commit: this._onChange\n      });\n    }\n\n    /**\n      Stops listening to element events\n      @protected\n     */\n  }, {\n    key: \"_unbindEvents\",\n    value: function _unbindEvents() {\n      if (this.el) this.el.unbindEvents();\n    }\n\n    /**\n      Fires custom event\n      @protected\n     */\n  }, {\n    key: \"_fireEvent\",\n    value: function _fireEvent(ev) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      var listeners = this._listeners[ev];\n      if (!listeners) return;\n      listeners.forEach(function (l) {\n        return l.apply(void 0, args);\n      });\n    }\n\n    /**\n      Current selection start\n      @readonly\n    */\n  }, {\n    key: \"selectionStart\",\n    get: function get() {\n      return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n    }\n\n    /** Current cursor position */\n  }, {\n    key: \"cursorPos\",\n    get: function get() {\n      return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n    },\n    set: function set(pos) {\n      if (!this.el || !this.el.isActive) return;\n      this.el.select(pos, pos);\n      this._saveSelection();\n    }\n\n    /**\n      Stores current selection\n      @protected\n    */\n  }, {\n    key: \"_saveSelection\",\n    value: function _saveSelection( /* ev */\n    ) {\n      if (this.displayValue !== this.el.value) {\n        console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n      }\n\n      this._selection = {\n        start: this.selectionStart,\n        end: this.cursorPos\n      };\n    }\n\n    /** Syncronizes model value from view */\n  }, {\n    key: \"updateValue\",\n    value: function updateValue() {\n      this.masked.value = this.el.value;\n      this._value = this.masked.value;\n    }\n\n    /** Syncronizes view from model value, fires change events */\n  }, {\n    key: \"updateControl\",\n    value: function updateControl() {\n      var newUnmaskedValue = this.masked.unmaskedValue;\n      var newValue = this.masked.value;\n      var newDisplayValue = this.displayValue;\n      var isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\n      this._unmaskedValue = newUnmaskedValue;\n      this._value = newValue;\n      if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n      if (isChanged) this._fireChangeEvents();\n    }\n\n    /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(opts) {\n      var mask = opts.mask,\n        restOpts = _objectWithoutPropertiesLoose(opts, _excluded);\n      var updateMask = !this.maskEquals(mask);\n      var updateOpts = !objectIncludes(this.masked, restOpts);\n      if (updateMask) this.mask = mask;\n      if (updateOpts) this.masked.updateOptions(restOpts);\n      if (updateMask || updateOpts) this.updateControl();\n    }\n\n    /** Updates cursor */\n  }, {\n    key: \"updateCursor\",\n    value: function updateCursor(cursorPos) {\n      if (cursorPos == null) return;\n      this.cursorPos = cursorPos;\n\n      // also queue change cursor for mobile browsers\n      this._delayUpdateCursor(cursorPos);\n    }\n\n    /**\n      Delays cursor update to support mobile browsers\n      @private\n    */\n  }, {\n    key: \"_delayUpdateCursor\",\n    value: function _delayUpdateCursor(cursorPos) {\n      var _this = this;\n      this._abortUpdateCursor();\n      this._changingCursorPos = cursorPos;\n      this._cursorChanging = setTimeout(function () {\n        if (!_this.el) return; // if was destroyed\n        _this.cursorPos = _this._changingCursorPos;\n        _this._abortUpdateCursor();\n      }, 10);\n    }\n\n    /**\n      Fires custom events\n      @protected\n    */\n  }, {\n    key: \"_fireChangeEvents\",\n    value: function _fireChangeEvents() {\n      this._fireEvent('accept', this._inputEvent);\n      if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n    }\n\n    /**\n      Aborts delayed cursor update\n      @private\n    */\n  }, {\n    key: \"_abortUpdateCursor\",\n    value: function _abortUpdateCursor() {\n      if (this._cursorChanging) {\n        clearTimeout(this._cursorChanging);\n        delete this._cursorChanging;\n      }\n    }\n\n    /** Aligns cursor to nearest available position */\n  }, {\n    key: \"alignCursor\",\n    value: function alignCursor() {\n      this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n    }\n\n    /** Aligns cursor only if selection is empty */\n  }, {\n    key: \"alignCursorFriendly\",\n    value: function alignCursorFriendly() {\n      if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n      this.alignCursor();\n    }\n\n    /** Adds listener on custom event */\n  }, {\n    key: \"on\",\n    value: function on(ev, handler) {\n      if (!this._listeners[ev]) this._listeners[ev] = [];\n      this._listeners[ev].push(handler);\n      return this;\n    }\n\n    /** Removes custom event listener */\n  }, {\n    key: \"off\",\n    value: function off(ev, handler) {\n      if (!this._listeners[ev]) return this;\n      if (!handler) {\n        delete this._listeners[ev];\n        return this;\n      }\n      var hIndex = this._listeners[ev].indexOf(handler);\n      if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n      return this;\n    }\n\n    /** Handles view input event */\n  }, {\n    key: \"_onInput\",\n    value: function _onInput(e) {\n      this._inputEvent = e;\n      this._abortUpdateCursor();\n\n      // fix strange IE behavior\n      if (!this._selection) return this.updateValue();\n      var details = new ActionDetails(\n      // new state\n      this.el.value, this.cursorPos,\n      // old state\n      this.displayValue, this._selection);\n      var oldRawValue = this.masked.rawInputValue;\n      var offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n        input: true,\n        raw: true\n      }).offset;\n\n      // force align in remove direction only if no input chars were removed\n      // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n      var removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n      var cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n      if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n      this.updateControl();\n      this.updateCursor(cursorPos);\n      delete this._inputEvent;\n    }\n\n    /** Handles view change event and commits model value */\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      if (this.displayValue !== this.el.value) {\n        this.updateValue();\n      }\n      this.masked.doCommit();\n      this.updateControl();\n      this._saveSelection();\n    }\n\n    /** Handles view drop event, prevents by default */\n  }, {\n    key: \"_onDrop\",\n    value: function _onDrop(ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n\n    /** Restore last selection on focus */\n  }, {\n    key: \"_onFocus\",\n    value: function _onFocus(ev) {\n      this.alignCursorFriendly();\n    }\n\n    /** Restore last selection on focus */\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(ev) {\n      this.alignCursorFriendly();\n    }\n\n    /** Unbind view events and removes element reference */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._unbindEvents();\n      // $FlowFixMe why not do so?\n      this._listeners.length = 0;\n      // $FlowFixMe\n      delete this.el;\n    }\n  }]);\n  return InputMask;\n}();\nIMask.InputMask = InputMask;\nexport { InputMask as default };","map":{"version":3,"names":["_","_objectWithoutPropertiesLoose","objectIncludes","DIRECTION","ActionDetails","createMask","maskedClass","MaskElement","HTMLMaskElement","HTMLContenteditableMaskElement","IMask","_excluded","InputMask","el","opts","isContentEditable","tagName","masked","_listeners","_value","_unmaskedValue","_saveSelection","bind","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","mask","maskEquals","Masked","constructor","updateOptions","unmaskedValue","_this$masked","str","value","updateControl","typedValue","val","typedValueEquals","displayValue","bindEvents","selectionChange","input","drop","click","focus","commit","unbindEvents","ev","_len","arguments","length","args","Array","_key","listeners","forEach","l","_cursorChanging","_changingCursorPos","selectionStart","selectionEnd","pos","isActive","select","console","warn","_selection","start","end","cursorPos","newUnmaskedValue","newValue","newDisplayValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_fireEvent","_inputEvent","isComplete","clearTimeout","nearestInputPos","LEFT","handler","push","hIndex","indexOf","splice","e","details","oldRawValue","rawInputValue","offset","startChangePos","removed","inserted","removeDirection","raw","NONE","updateCursor","doCommit","preventDefault","stopPropagation","_unbindEvents","default"],"sources":["C:/Users/admin/Desktop/Документы/123123/GW/Information-System-of-Internet-Provider/SiteReact/gg/app/node_modules/imask/esm/controls/input.js"],"sourcesContent":["import { _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-6b3bd404.js';\nimport { objectIncludes, DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport '../masked/date.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../masked/pattern.js';\nimport '../masked/base.js';\nimport '../core/continuous-tail-details.js';\nimport '../masked/pattern/input-definition.js';\nimport '../masked/pattern/fixed-definition.js';\nimport '../masked/pattern/chunk-tail-details.js';\nimport '../masked/pattern/cursor.js';\nimport '../masked/regexp.js';\nimport '../masked/range.js';\n\nconst _excluded = [\"mask\"];\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n    @readonly\n  */\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  get mask() {\n    return this.masked.mask;\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) === null || _this$masked === void 0 ? void 0 : _this$masked.maskEquals(mask));\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n\n    // $FlowFixMe No ideas ... after update\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /**\n    Starts listening to element events\n    @protected\n  */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange\n    });\n  }\n\n  /**\n    Stops listening to element events\n    @protected\n   */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /**\n    Fires custom event\n    @protected\n   */\n  _fireEvent(ev) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(...args));\n  }\n\n  /**\n    Current selection start\n    @readonly\n  */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /**\n    Stores current selection\n    @protected\n  */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl() {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n        mask\n      } = opts,\n      restOpts = _objectWithoutPropertiesLoose(opts, _excluded);\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /**\n    Delays cursor update to support mobile browsers\n    @private\n  */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /**\n    Fires custom events\n    @protected\n  */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /**\n    Aborts delayed cursor update\n    @private\n  */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n    const details = new ActionDetails(\n    // new state\n    this.el.value, this.cursorPos,\n    // old state\n    this.displayValue, this._selection);\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    // $FlowFixMe why not do so?\n    this._listeners.length = 0;\n    // $FlowFixMe\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}