{"ast":null,"code":"import _classCallCheck from \"C:/Users/admin/Desktop/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/123123/GW/Information-System-of-Internet-Provider/SiteReact/gg/app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/admin/Desktop/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/123123/GW/Information-System-of-Internet-Provider/SiteReact/gg/app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/admin/Desktop/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/123123/GW/Information-System-of-Internet-Provider/SiteReact/gg/app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/admin/Desktop/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/123123/GW/Information-System-of-Internet-Provider/SiteReact/gg/app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n/** Bridge between HTMLElement and {@link Masked} */\nvar HTMLMaskElement = /*#__PURE__*/function (_MaskElement) {\n  _inherits(HTMLMaskElement, _MaskElement);\n  var _super = _createSuper(HTMLMaskElement);\n  /** Mapping between HTMLElement events and mask internal events */\n\n  /** HTMLElement to use mask on */\n\n  /**\n    @param {HTMLInputElement|HTMLTextAreaElement} input\n  */\n  function HTMLMaskElement(input) {\n    var _this;\n    _classCallCheck(this, HTMLMaskElement);\n    _this = _super.call(this);\n    _this.input = input;\n    _this._handlers = {};\n    return _this;\n  }\n\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n  _createClass(HTMLMaskElement, [{\n    key: \"rootElement\",\n    get: function get() {\n      var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n      return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) === null || _this$input$getRootNo2 === void 0 ? void 0 : _this$input$getRootNo2.call(_this$input)) !== null && _this$input$getRootNo !== void 0 ? _this$input$getRootNo : document;\n    }\n\n    /**\n      Is element in focus\n      @readonly\n    */\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      //$FlowFixMe\n      return this.input === this.rootElement.activeElement;\n    }\n\n    /**\n      Returns HTMLElement selection start\n      @override\n    */\n  }, {\n    key: \"_unsafeSelectionStart\",\n    get: function get() {\n      return this.input.selectionStart;\n    }\n\n    /**\n      Returns HTMLElement selection end\n      @override\n    */\n  }, {\n    key: \"_unsafeSelectionEnd\",\n    get: function get() {\n      return this.input.selectionEnd;\n    }\n\n    /**\n      Sets HTMLElement selection\n      @override\n    */\n  }, {\n    key: \"_unsafeSelect\",\n    value: function _unsafeSelect(start, end) {\n      this.input.setSelectionRange(start, end);\n    }\n\n    /**\n      HTMLElement value\n      @override\n    */\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.input.value;\n    },\n    set: function set(value) {\n      this.input.value = value;\n    }\n\n    /**\n      Binds HTMLElement events to mask internal events\n      @override\n    */\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents(handlers) {\n      var _this2 = this;\n      Object.keys(handlers).forEach(function (event) {\n        return _this2._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]);\n      });\n    }\n\n    /**\n      Unbinds HTMLElement events to mask internal events\n      @override\n    */\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this3 = this;\n      Object.keys(this._handlers).forEach(function (event) {\n        return _this3._toggleEventHandler(event);\n      });\n    }\n\n    /** */\n  }, {\n    key: \"_toggleEventHandler\",\n    value: function _toggleEventHandler(event, handler) {\n      if (this._handlers[event]) {\n        this.input.removeEventListener(event, this._handlers[event]);\n        delete this._handlers[event];\n      }\n      if (handler) {\n        this.input.addEventListener(event, handler);\n        this._handlers[event] = handler;\n      }\n    }\n  }]);\n  return HTMLMaskElement;\n}(MaskElement);\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur'\n};\nIMask.HTMLMaskElement = HTMLMaskElement;\nexport { HTMLMaskElement as default };","map":{"version":3,"names":["MaskElement","IMask","HTMLMaskElement","input","_handlers","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","call","document","rootElement","activeElement","selectionStart","selectionEnd","start","end","setSelectionRange","value","handlers","Object","keys","forEach","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","commit","default"],"sources":["C:/Users/admin/Desktop/Документы/123123/GW/Information-System-of-Internet-Provider/SiteReact/gg/app/node_modules/imask/esm/controls/html-mask-element.js"],"sourcesContent":["import MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n/** Bridge between HTMLElement and {@link Masked} */\nclass HTMLMaskElement extends MaskElement {\n  /** Mapping between HTMLElement events and mask internal events */\n\n  /** HTMLElement to use mask on */\n\n  /**\n    @param {HTMLInputElement|HTMLTextAreaElement} input\n  */\n  constructor(input) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n  get rootElement() {\n    var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n    return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) === null || _this$input$getRootNo2 === void 0 ? void 0 : _this$input$getRootNo2.call(_this$input)) !== null && _this$input$getRootNo !== void 0 ? _this$input$getRootNo : document;\n  }\n\n  /**\n    Is element in focus\n    @readonly\n  */\n  get isActive() {\n    //$FlowFixMe\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n    @override\n  */\n  bindEvents(handlers) {\n    Object.keys(handlers).forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n    @override\n  */\n  unbindEvents() {\n    Object.keys(this._handlers).forEach(event => this._toggleEventHandler(event));\n  }\n\n  /** */\n  _toggleEventHandler(event, handler) {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur'\n};\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n"],"mappings":";;;;AAAA,OAAOA,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,KAAK,MAAM,mBAAmB;;AAErC;AAAA,IACMC,eAAe;EAAA;EAAA;EACnB;;EAEA;;EAEA;AACF;AACA;EACE,yBAAYC,KAAK,EAAE;IAAA;IAAA;IACjB;IACA,MAAKA,KAAK,GAAGA,KAAK;IAClB,MAAKC,SAAS,GAAG,CAAC,CAAC;IAAC;EACtB;;EAEA;EACA;EAAA;IAAA;IAAA,KACA,eAAkB;MAChB,IAAIC,qBAAqB,EAAEC,sBAAsB,EAAEC,WAAW;MAC9D,OAAO,CAACF,qBAAqB,GAAG,CAACC,sBAAsB,GAAG,CAACC,WAAW,GAAG,IAAI,CAACJ,KAAK,EAAEK,WAAW,MAAM,IAAI,IAAIF,sBAAsB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,sBAAsB,CAACG,IAAI,CAACF,WAAW,CAAC,MAAM,IAAI,IAAIF,qBAAqB,KAAK,KAAK,CAAC,GAAGA,qBAAqB,GAAGK,QAAQ;IACtR;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,KAIA,eAAe;MACb;MACA,OAAO,IAAI,CAACP,KAAK,KAAK,IAAI,CAACQ,WAAW,CAACC,aAAa;IACtD;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,KAIA,eAA4B;MAC1B,OAAO,IAAI,CAACT,KAAK,CAACU,cAAc;IAClC;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,KAIA,eAA0B;MACxB,OAAO,IAAI,CAACV,KAAK,CAACW,YAAY;IAChC;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,OAIA,uBAAcC,KAAK,EAAEC,GAAG,EAAE;MACxB,IAAI,CAACb,KAAK,CAACc,iBAAiB,CAACF,KAAK,EAAEC,GAAG,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,KAIA,eAAY;MACV,OAAO,IAAI,CAACb,KAAK,CAACe,KAAK;IACzB,CAAC;IAAA,KACD,aAAUA,KAAK,EAAE;MACf,IAAI,CAACf,KAAK,CAACe,KAAK,GAAGA,KAAK;IAC1B;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,OAIA,oBAAWC,QAAQ,EAAE;MAAA;MACnBC,MAAM,CAACC,IAAI,CAACF,QAAQ,CAAC,CAACG,OAAO,CAAC,UAAAC,KAAK;QAAA,OAAI,MAAI,CAACC,mBAAmB,CAACtB,eAAe,CAACuB,UAAU,CAACF,KAAK,CAAC,EAAEJ,QAAQ,CAACI,KAAK,CAAC,CAAC;MAAA,EAAC;IACtH;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,OAIA,wBAAe;MAAA;MACbH,MAAM,CAACC,IAAI,CAAC,IAAI,CAACjB,SAAS,CAAC,CAACkB,OAAO,CAAC,UAAAC,KAAK;QAAA,OAAI,MAAI,CAACC,mBAAmB,CAACD,KAAK,CAAC;MAAA,EAAC;IAC/E;;IAEA;EAAA;IAAA;IAAA,OACA,6BAAoBA,KAAK,EAAEG,OAAO,EAAE;MAClC,IAAI,IAAI,CAACtB,SAAS,CAACmB,KAAK,CAAC,EAAE;QACzB,IAAI,CAACpB,KAAK,CAACwB,mBAAmB,CAACJ,KAAK,EAAE,IAAI,CAACnB,SAAS,CAACmB,KAAK,CAAC,CAAC;QAC5D,OAAO,IAAI,CAACnB,SAAS,CAACmB,KAAK,CAAC;MAC9B;MACA,IAAIG,OAAO,EAAE;QACX,IAAI,CAACvB,KAAK,CAACyB,gBAAgB,CAACL,KAAK,EAAEG,OAAO,CAAC;QAC3C,IAAI,CAACtB,SAAS,CAACmB,KAAK,CAAC,GAAGG,OAAO;MACjC;IACF;EAAC;EAAA;AAAA,EA3F2B1B,WAAW;AA6FzCE,eAAe,CAACuB,UAAU,GAAG;EAC3BI,eAAe,EAAE,SAAS;EAC1B1B,KAAK,EAAE,OAAO;EACd2B,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AACDhC,KAAK,CAACC,eAAe,GAAGA,eAAe;AAEvC,SAASA,eAAe,IAAIgC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}